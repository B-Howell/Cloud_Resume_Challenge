name: Backend CI/CD

on:
  push:
    branches:
      - master
    paths:
      - 'backend/**'

jobs:
  test-lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: 'backend'

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      
      - name: Install dependencies
        run: |
          cd backend
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt
        working-directory: ./backend

      - name: Test Lambda function (GET)
        run: |
          cd backend
          source env/bin/activate
          aws lambda invoke --function-name count --cli-binary-format raw-in-base64-out --payload '{"httpMethod": "GET", "queryStringParameters": {"key1": "value1"}}' output-get.json
        working-directory: ./backend
        with:
          payload: |
            {
              "httpMethod": "GET",
              "queryStringParameters": {
                "key1": "value1"
              }
            }
      
      - name: Test Lambda function (POST)
        run: |
          cd backend
          source env/bin/activate
          aws lambda invoke --function-name count --cli-binary-format raw-in-base64-out --payload '{"httpMethod": "POST", "body": {"key1": "value1"}}' output-post.json
        working-directory: ./backend
        with:
          payload: |
            {
              "httpMethod": "POST",
              "body": {
              "key1": "value1"
              }
            }

  package-lambda:
    needs: test-lambda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          path: 'backend'

      - name: Create virtual environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd backend
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt
        working-directory: ./backend

      - name: Package Lambda code
        run: |
          cd backend
          source env/bin/activate
          zip count.zip count.py

          # Save a hash of the zip file
          echo "$(shasum -a 256 count.zip | cut -d ' ' -f 1)" > count.zip.hash

          # Store the hash as an environment variable
          echo "HASH=$(cat count.zip.hash)" >> $GITHUB_ENV
        working-directory: ./backend

  terraform-apply:
    needs: package-lambda
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          path: 'backend'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.4.0
      
      - name: Terraform Init
        id: init
        run: cd backend && terraform init
        working-directory: ./backend

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: cd backend && terraform apply -auto-approve -input=false
        working-directory: ./backend

